import{_ as n,o as a,c as e,O as o}from"./chunks/framework.4a218191.js";const E=JSON.parse('{"title":"Ipc","description":"electron-prokit ipc api","frontmatter":{"outline":"deep","title":"Ipc","description":"electron-prokit ipc api"},"headers":[],"relativePath":"api/electron-prokit/ipc.md","filePath":"api/electron-prokit/ipc.md"}'),l={name:"api/electron-prokit/ipc.md"};function p(t,s,r,c,i,d){return a(),e("div",null,s[0]||(s[0]=[o(`<h1 id="ipc" tabindex="-1">Ipc <a class="header-anchor" href="#ipc" aria-label="Permalink to &quot;Ipc&quot;">​</a></h1><p>IPC (Inter-Process Communication) is an essential feature of Electron. It allows message communication between the main process and renderer processes, as well as between different renderer processes. The framework provides some encapsulation related to IPC in this module, making it easier for users to use communication methods.</p><h2 id="purpose" tabindex="-1">Purpose <a class="header-anchor" href="#purpose" aria-label="Permalink to &quot;Purpose&quot;">​</a></h2><p>The main purpose of IPC is to transmit data and messages between the main process and renderer processes, facilitating communication between different processes. Common use cases include:</p><ul><li>The main process needs to control renderer processes.</li><li>Renderer processes need to call methods in the main process.</li><li>Communication is required between renderer processes on different pages.</li></ul><h2 id="initialization" tabindex="-1">Initialization <a class="header-anchor" href="#initialization" aria-label="Permalink to &quot;Initialization&quot;">​</a></h2><p>To use the IPC module&#39;s related APIs correctly, some initialization is required.</p><div class="danger custom-block"><p class="custom-block-title">Important！！！</p><p>To ensure that as many APIs as possible can be used without differences in the main process, renderer processes, and preload scripts, the framework has flattened many differences. So, initializing IPC is essential for the smooth use of the framework&#39;s APIs.</p></div><p><strong>Main Process</strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// Initialization</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { initIpc } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;electron-prokit&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#B392F0;">initIpc</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// Initialization</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { initIpc } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;electron-prokit&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6F42C1;">initIpc</span><span style="color:#24292E;">();</span></span></code></pre></div><p><strong>Preload Script</strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// Expose registration function</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { initExposeInMainWorld } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;electron-prokit&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#B392F0;">initExposeInMainWorld</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// Expose registration function</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { initExposeInMainWorld } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;electron-prokit&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6F42C1;">initExposeInMainWorld</span><span style="color:#24292E;">();</span></span></code></pre></div><h2 id="api-overview" tabindex="-1">API Overview <a class="header-anchor" href="#api-overview" aria-label="Permalink to &quot;API Overview&quot;">​</a></h2><table><thead><tr><th>Function Name</th><th style="text-align:center;">Usage Context</th><th style="text-align:right;">Description</th></tr></thead><tbody><tr><td>initIpc</td><td style="text-align:center;">Main</td><td style="text-align:right;">Initialize IPC</td></tr><tr><td>onMsgFromRender</td><td style="text-align:center;">Main</td><td style="text-align:right;">Receive messages from renderer processes</td></tr><tr><td>sendMsgToRender</td><td style="text-align:center;">Main</td><td style="text-align:right;">Send messages to renderer processes</td></tr><tr><td>initExposeInMainWorld</td><td style="text-align:center;">Preload</td><td style="text-align:right;">Expose registration function</td></tr><tr><td>onMsgFromMain</td><td style="text-align:center;">Renderer/Preload</td><td style="text-align:right;">Receive messages from the main process</td></tr><tr><td>sendMsgToMain</td><td style="text-align:center;">Renderer/Preload</td><td style="text-align:right;">Send messages to the main process</td></tr><tr><td>onMsgFromOtherRender</td><td style="text-align:center;">Renderer/Preload</td><td style="text-align:right;">Receive messages from other renderer processes</td></tr><tr><td>sendMsgToOtherRender</td><td style="text-align:center;">Renderer/Preload</td><td style="text-align:right;">Send messages to other renderer processes</td></tr></tbody></table><h2 id="api-usage" tabindex="-1">API Usage <a class="header-anchor" href="#api-usage" aria-label="Permalink to &quot;API Usage&quot;">​</a></h2><h3 id="initipc" tabindex="-1">initIpc <a class="header-anchor" href="#initipc" aria-label="Permalink to &quot;initIpc&quot;">​</a></h3><p>Initialize IPC, and it needs to be called in the main process.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// Main Process</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { initIpc } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;electron-prokit&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#B392F0;">initIpc</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// Main Process</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { initIpc } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;electron-prokit&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6F42C1;">initIpc</span><span style="color:#24292E;">();</span></span></code></pre></div><h3 id="onmsgfromrender" tabindex="-1">onMsgFromRender <a class="header-anchor" href="#onmsgfromrender" aria-label="Permalink to &quot;onMsgFromRender&quot;">​</a></h3><p>Listen to messages sent by renderer processes in the main process.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// Main Process</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { onMsgFromRender } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;electron-prokit&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#B392F0;">onMsgFromRender</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">event</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(event, args);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// Main Process</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { onMsgFromRender } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;electron-prokit&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6F42C1;">onMsgFromRender</span><span style="color:#24292E;">((</span><span style="color:#E36209;">event</span><span style="color:#24292E;">, </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(event, args);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p><strong>💬 Parameters</strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">onMsgFromRender</span><span style="color:#E1E4E8;">(callback: (</span><span style="color:#FFAB70;">event</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Electron</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">IpcMainEvent</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">args</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">any</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">onMsgFromRender</span><span style="color:#24292E;">(callback: (</span><span style="color:#E36209;">event</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Electron</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">IpcMainEvent</span><span style="color:#24292E;">, </span><span style="color:#E36209;">args</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">any</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;">)</span></span></code></pre></div><ul><li><p>callback:A callback function that includes two parameters</p><ul><li>event: ipcMain event object</li><li>args: Parameters sent by the renderer process</li></ul></li></ul><h3 id="sendmsgtorender" tabindex="-1">sendMsgToRender <a class="header-anchor" href="#sendmsgtorender" aria-label="Permalink to &quot;sendMsgToRender&quot;">​</a></h3><p>The main process sends messages to renderer processes.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// Main Process</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { sendMsgToRender } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;electron-prokit&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#B392F0;">sendMsgToRender</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;mainWin&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Hello&quot;</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// Main Process</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { sendMsgToRender } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;electron-prokit&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6F42C1;">sendMsgToRender</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;mainWin&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Hello&quot;</span><span style="color:#24292E;">);</span></span></code></pre></div><p><strong>💬 Parameters</strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">sendMsgToRender</span><span style="color:#E1E4E8;">(windowName: string, msg: any)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">sendMsgToRender</span><span style="color:#24292E;">(windowName: string, msg: any)</span></span></code></pre></div><ul><li>windowName: The name of the target window for sending the message</li><li>msg: The content of the message to be sent</li></ul><h3 id="initexposeinmainworld" tabindex="-1">initExposeInMainWorld <a class="header-anchor" href="#initexposeinmainworld" aria-label="Permalink to &quot;initExposeInMainWorld&quot;">​</a></h3><p>Expose registration functions in the Preload script.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// Preload </span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { initExposeInMainWorld } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;electron-prokit&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#B392F0;">initExposeInMainWorld</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// Preload </span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { initExposeInMainWorld } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;electron-prokit&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6F42C1;">initExposeInMainWorld</span><span style="color:#24292E;">();</span></span></code></pre></div><h3 id="onmsgfrommain" tabindex="-1">onMsgFromMain <a class="header-anchor" href="#onmsgfrommain" aria-label="Permalink to &quot;onMsgFromMain&quot;">​</a></h3><p>Listen to messages sent by the main process.。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// Render or Preload </span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { onMsgFromMain } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;electron-prokit&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#B392F0;">onMsgFromMain</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">event</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(event, args);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// Render or Preload </span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { onMsgFromMain } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;electron-prokit&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6F42C1;">onMsgFromMain</span><span style="color:#24292E;">((</span><span style="color:#E36209;">event</span><span style="color:#24292E;">, </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(event, args);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p><strong>💬 Parameters</strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">onMsgFromMain</span><span style="color:#E1E4E8;">(callback: (</span><span style="color:#FFAB70;">event</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Electron</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">IpcRendererEvent</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">args</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">any</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">onMsgFromMain</span><span style="color:#24292E;">(callback: (</span><span style="color:#E36209;">event</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Electron</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">IpcRendererEvent</span><span style="color:#24292E;">, </span><span style="color:#E36209;">args</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">any</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;">)</span></span></code></pre></div><ul><li>callback:A callback function that includes two parameters <ul><li>event: ipcRenderer event object</li><li>args: Parameters sent by the main process</li></ul></li></ul><h3 id="sendmsgtomain" tabindex="-1">sendMsgToMain <a class="header-anchor" href="#sendmsgtomain" aria-label="Permalink to &quot;sendMsgToMain&quot;">​</a></h3><p>Send messages to the main process.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// Render or Preload </span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { sendMsgToMain } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;electron-prokit&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#B392F0;">sendMsgToMain</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Hello main&quot;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">then</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">res</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(res);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// Render or Preload </span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { sendMsgToMain } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;electron-prokit&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6F42C1;">sendMsgToMain</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Hello main&quot;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">then</span><span style="color:#24292E;">((</span><span style="color:#E36209;">res</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(res);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p><strong>💬 Parameters</strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">sendMsgToMain</span><span style="color:#E1E4E8;">(msg: any)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">sendMsgToMain</span><span style="color:#24292E;">(msg: any)</span></span></code></pre></div><ul><li>msg: The content of the message to be sent.</li></ul><h3 id="onmsgfromotherrender" tabindex="-1">onMsgFromOtherRender <a class="header-anchor" href="#onmsgfromotherrender" aria-label="Permalink to &quot;onMsgFromOtherRender&quot;">​</a></h3><p>Listen to messages sent by other renderer processes.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// Render or Preload </span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { onMsgFromOtherRender } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;electron-prokit&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#B392F0;">onMsgFromMain</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">event</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(event, args);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// Render or Preload </span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { onMsgFromOtherRender } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;electron-prokit&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6F42C1;">onMsgFromMain</span><span style="color:#24292E;">((</span><span style="color:#E36209;">event</span><span style="color:#24292E;">, </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(event, args);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p><strong>💬 Parameters</strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">onMsgFromOtherRender</span><span style="color:#E1E4E8;">(callback: (</span><span style="color:#FFAB70;">event</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Electron</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">IpcRendererEvent</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">args</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">any</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">onMsgFromOtherRender</span><span style="color:#24292E;">(callback: (</span><span style="color:#E36209;">event</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Electron</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">IpcRendererEvent</span><span style="color:#24292E;">, </span><span style="color:#E36209;">args</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">any</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;">)</span></span></code></pre></div><ul><li>callback:A callback function that includes two parameters <ul><li>event: ipcRenderer event object</li><li>args: Parameters sent by the main process</li></ul></li></ul><h3 id="sendmsgtootherrender" tabindex="-1">sendMsgToOtherRender <a class="header-anchor" href="#sendmsgtootherrender" aria-label="Permalink to &quot;sendMsgToOtherRender&quot;">​</a></h3><p>Send messages to other renderer processes.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// Render or Preload </span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { sendMsgToOtherRender } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;electron-prokit&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#B392F0;">sendMsgToOtherRender</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;work&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Hello work&quot;</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// Render or Preload </span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { sendMsgToOtherRender } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;electron-prokit&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6F42C1;">sendMsgToOtherRender</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;work&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Hello work&quot;</span><span style="color:#24292E;">);</span></span></code></pre></div><p><strong>💬 Parameters</strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">sendMsgToOtherRender</span><span style="color:#E1E4E8;">(windowName:string,msg:any)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">sendMsgToOtherRender</span><span style="color:#24292E;">(windowName:string,msg:any)</span></span></code></pre></div><ul><li>windowName: The name of the target window for sending the message</li><li>msg: The content of the message to be sent</li></ul><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><p><a href="https://github.com/Xutaotaotao/electron-prokit/blob/main/play/src/render/pages/ipc.tsx" target="_blank" rel="noreferrer">Click to view example source code</a></p>`,59)]))}const g=n(l,[["render",p]]);export{E as __pageData,g as default};
